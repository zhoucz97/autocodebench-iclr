import java.util.*
/**
 * Determines whether a given number x is an element of a set M generated from a starting number k.
 * The set M is generated as follows:
 *   (1) k is an element of M.
 *   (2) If y is an element of M, then both (2y + 1) and (3y + 1) are elements of M.
 *   (3) No other elements are in M except those generated by the above rules.
 * 
 * Example:
 * >>> isElementOfGeneratedSet(0, 22)
 *     "YES"
 * >>> isElementOfGeneratedSet(1, 10)
 *     "NO"
 */



fun isElementOfGeneratedSet(k: Int, x: Int): String 
{
    if (k == x) return "YES"
    
    val queue: Queue<Int> = LinkedList()
    queue.add(k)
    val visited = mutableSetOf<Int>()
    visited.add(k)
    
    while (queue.isNotEmpty()) {
        val current = queue.poll()
        
        // Generate next numbers
        val next1 = 2 * current + 1
        val next2 = 3 * current + 1
        
        if (next1 == x || next2 == x) {
            return "YES"
        }
        
        if (next1 <= x && !visited.contains(next1)) {
            visited.add(next1)
            queue.add(next1)
        }
        
        if (next2 <= x && !visited.contains(next2)) {
            visited.add(next2)
            queue.add(next2)
        }
    }
    
    return "NO"
}
fun main() {
    check(isElementOfGeneratedSet(0, 22) == "YES")
    check(isElementOfGeneratedSet(1, 10) == "YES")
    check(isElementOfGeneratedSet(2, 13) == "NO")
    check(isElementOfGeneratedSet(3, 30) == "NO")
}


main()