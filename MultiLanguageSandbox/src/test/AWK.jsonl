{"task_id": "AWK/1", "prompt": "Using the awk command in Linux, accomplish the following task: Display users whose shell is '/bin/bash' and print their usernames.", "canonical_solution": "awk -F: '$7 == \"/bin/bash\" {print $1}' /etc/passwd", "instruction": "Using the awk command in Linux, accomplish the following task: Display users whose shell is '/bin/bash' and print their usernames.", "level": "easy"}
{"task_id": "AWK/2", "prompt": "Using the awk command in Linux, complete the following task: Print the count of occurrences of each shell in /etc/passwd, with the format 'shell count'.", "canonical_solution": "awk -F: '{shells[$NF]++} END {for (shell in shells) print shell, shells[shell]}' /etc/passwd", "instruction": "Using the awk command in Linux, complete the following task: Print the count of occurrences of each shell in /etc/passwd, with the format 'shell count'.", "level": "middle"}
{"task_id": "AWK/3", "prompt": "# Using the awk command in Linux, accomplish the following task: The 'data/AWK/9_1.txt' file contains records of employee IDs and names, for example: '100 Jason Smith'. The 'data/AWK/9_2.txt' file contains employee IDs and bonuses, for example: '100 $5,000', '200 $500', '300 $3,000', '400 $1,250'. Merge the two files and output them as follows: '100 Jason $5,000'.", "canonical_solution": "awk 'NR == FNR {names[$1] = $2; next} $1 in names {print $1, names[$1], $2}' data/AWK/9_1.txt data/AWK/9_2.txt", "instruction": "# Using the awk command in Linux, accomplish the following task: The 'data/AWK/9_1.txt' file contains records of employee IDs and names, for example: '100 Jason Smith'. The 'data/AWK/9_2.txt' file contains employee IDs and bonuses, for example: '100 $5,000', '200 $500', '300 $3,000', '400 $1,250'. Merge the two files and output them as follows: '100 Jason $5,000'.", "level": "hard"}
{"task_id": "AWK/4", "prompt": "Using the awk command in Linux, complete the following task: In /etc/passwd, print the lines with UID less than 100.", "canonical_solution": "awk -F: '$3 < 100 {print}' /etc/passwd", "instruction": "Using the awk command in Linux, complete the following task: In /etc/passwd, print the lines with UID less than 100.", "level": "easy"}
{"task_id": "AWK/5", "prompt": "Using the awk command in Linux, complete the following task: In data/AWK/contribution.txt, where the data format is as follows: 'Zhang Dandan 41117397 :250:100:175', where the first column is the surname, the second column is the first name (concatenating the first and second columns gives the full name), the third column is the corresponding ID number, and the last three columns are three donation amounts. Please print and display the second donation amount of people with the surname 'Zhang' along with their first names.", "canonical_solution": "awk -F \"[ :]+\" '$1~/^Zhang/{print $2,$(NF-1)}' data/AWK/contribution.txt", "instruction": "Using the awk command in Linux, complete the following task: In data/AWK/contribution.txt, where the data format is as follows: 'Zhang Dandan 41117397 :250:100:175', where the first column is the surname, the second column is the first name (concatenating the first and second columns gives the full name), the third column is the corresponding ID number, and the last three columns are three donation amounts. Please print and display the second donation amount of people with the surname 'Zhang' along with their first names.", "level": "middle"}
{"task_id": "AWK/6", "prompt": "Using the awk command in Linux, complete the following task: In data/AWK/contribution.txt, where the data format is as follows: 'Zhang Dandan 41117397 :250:100:175', where the first column is the surname, the second column is the first name (concatenating the first and second columns gives the full name), the third column is the corresponding ID number, and the last three columns are three donation amounts. Please print the surname 'Xiaoyu' and the corresponding ID number.", "canonical_solution": "awk -F \"[ :]+\" '$2~/^Xiaoyu/{print $1,$3}' data/AWK/contribution.txt", "instruction": "Using the awk command in Linux, complete the following task: In data/AWK/contribution.txt, where the data format is as follows: 'Zhang Dandan 41117397 :250:100:175', where the first column is the surname, the second column is the first name (concatenating the first and second columns gives the full name), the third column is the corresponding ID number, and the last three columns are three donation amounts. Please print the surname 'Xiaoyu' and the corresponding ID number.", "level": "middle"}
{"task_id": "AWK/7", "prompt": "Using the awk command in Linux, complete the following task: In data/AWK/contribution.txt, where the data format is as follows:\n# 'Zhang Dandan 41117397 :250:100:175\n# Zhang Xiaoyu 390320151 :155:90:201\n# Meng Feixue 80042789 :250:60:50\n# Wu Waiwai 70271111 :250:80:75\n# Liu Bingbing 41117483 :250:100:175\n# Wang Xiaoai 3515064655 :50:95:135\n# Zi Gege 1986787350 :250:168:200\n# Li Youjiu 918391635 :175:75:300\n# Lao Nanhai 918391635 :250:100:175',\n\n# where the first column is the surname, the second column is the first name (concatenating the first and second columns gives the full name), the third column is the corresponding ID number, and the last three columns are three donation amounts. Please print the full names and ID numbers of people with ID numbers starting with '41'", "canonical_solution": "awk -F \"[ :]+\" '$3~/^(41)/{print $1,$2,$3}' data/AWK/contribution.txt", "instruction": "Using the awk command in Linux, complete the following task: In data/AWK/contribution.txt, where the data format is as follows:\n# 'Zhang Dandan 41117397 :250:100:175\n# Zhang Xiaoyu 390320151 :155:90:201\n# Meng Feixue 80042789 :250:60:50\n# Wu Waiwai 70271111 :250:80:75\n# Liu Bingbing 41117483 :250:100:175\n# Wang Xiaoai 3515064655 :50:95:135\n# Zi Gege 1986787350 :250:168:200\n# Li Youjiu 918391635 :175:75:300\n# Lao Nanhai 918391635 :250:100:175',\n\n# where the first column is the surname, the second column is the first name (concatenating the first and second columns gives the full name), the third column is the corresponding ID number, and the last three columns are three donation amounts. Please print the full names and ID numbers of people with ID numbers starting with '41'", "level": "middle"}
{"task_id": "AWK/8", "prompt": "Using the awk command in Linux, complete the following task: Print lines 23 to 30 of the file /etc/services.", "canonical_solution": "awk 'NR>=23 && NR<=30' /etc/services", "instruction": "Using the awk command in Linux, complete the following task: Print lines 23 to 30 of the file /etc/services.", "level": "easy"}
{"task_id": "AWK/9", "prompt": "Using the awk command in Linux, accomplish the following task: Find the lines in /etc/passwd where the fifth column is 'root'", "canonical_solution": "awk -F: '$5 == \"root\"' /etc/passwd", "instruction": "Using the awk command in Linux, accomplish the following task: Find the lines in /etc/passwd where the fifth column is 'root'", "level": "easy"}
{"task_id": "AWK/10", "prompt": "Using the awk command in Linux, complete the following task: Count the number of empty lines in the /etc/services file.", "canonical_solution": "awk '/^$/{i++}END{print i}' /etc/services", "instruction": "Using the awk command in Linux, complete the following task: Count the number of empty lines in the /etc/services file.", "level": "easy"}
{"task_id": "AWK/11", "prompt": "Using the awk command in Linux, accomplish the following task: Given that each line in data/AWK/url.txt has the format 'http://www.etiantian.org/index.html', extract the domain name and perform counting and sorting based on domain names.", "canonical_solution": "awk -F/ '{print $3}' data/AWK/url.txt | sort | uniq -c | sort -nr", "instruction": "Using the awk command in Linux, accomplish the following task: Given that each line in data/AWK/url.txt has the format 'http://www.etiantian.org/index.html', extract the domain name and perform counting and sorting based on domain names.", "level": "middle"}
{"task_id": "AWK/12", "prompt": "Using the awk command in Linux, complete the following task: In the /etc/passwd file, where ':' is the delimiter, how many lines have a value greater than 15 in the third field?", "canonical_solution": "awk -F \":\" '$3>15{a+=1;print a}' /etc/passwd", "instruction": "Using the awk command in Linux, complete the following task: In the /etc/passwd file, where ':' is the delimiter, how many lines have a value greater than 15 in the third field?", "level": "easy"}
{"task_id": "AWK/13", "prompt": "Using the awk command in Linux, accomplish the following task: Print all the commands in the environment variable $PATH that consist of only four arbitrary characters", "canonical_solution": "echo $PATH | tr ':' '\\n' | awk 'length($0) == 4'", "instruction": "Using the awk command in Linux, accomplish the following task: Print all the commands in the environment variable $PATH that consist of only four arbitrary characters", "level": "easy"}
{"task_id": "AWK/14", "prompt": "Using the awk command in Linux, complete the following task: Sort /etc/passwd in descending order of word frequency.", "canonical_solution": "awk 'BEGIN{RS=\"[ ]+\"}{print $0}' /etc/passwd | sort |uniq -c|sort", "instruction": "Using the awk command in Linux, complete the following task: Sort /etc/passwd in descending order of word frequency.", "level": "middle"}
{"task_id": "AWK/15", "prompt": "Using the awk command in Linux, complete the following task: Count the number of lines in the/etc/passwd file", "canonical_solution": "awk 'END {print NR}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Count the number of lines in the/etc/passwd file"}
{"task_id": "AWK/16", "prompt": "Using the awk command in Linux, complete the following task: Count the word count of the/etc/passwd file", "canonical_solution": "awk -F':' '{total += NF} END {print total}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Count the word count of the/etc/passwd file"}
{"task_id": "AWK/17", "prompt": "Using the awk command in Linux, complete the following task: Count the number of bytes in the/etc/passwd file", "canonical_solution": "awk '{total += length($0) + 1} END {print total}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Count the number of bytes in the/etc/passwd file"}
{"task_id": "AWK/18", "prompt": "Using the awk command in Linux, complete the following task: Print the line number for each line in the/etc/passwd file", "canonical_solution": "awk '{print NR}' /etc/passwd ", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the line number for each line in the/etc/passwd file"}
{"task_id": "AWK/19", "prompt": "Using the awk command in Linux, complete the following task: Print the line number of the last line in the/etc/passwd file", "canonical_solution": "awk 'END{print NR}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the line number of the last line in the/etc/passwd file"}
{"task_id": "AWK/20", "prompt": "Using the awk command in Linux, complete the following task: Print the last line of the/etc/passwd file", "canonical_solution": "awk '{last = $0} END {print last}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the last line of the/etc/passwd file"}
{"task_id": "AWK/21", "prompt": "Using the awk command in Linux, complete the following task: Print the last five lines of the/etc/passwd file", "canonical_solution": "awk '{arr[NR]=$0} END { i=NR-5+1; do{ print arr[i]; i++}while(i <= NR);  }' /etc/passwd", "level": "middle", "instruction": "Using the awk command in Linux, complete the following task: Print the last five lines of the/etc/passwd file"}
{"task_id": "AWK/22", "prompt": "Using the awk command in Linux, complete the following task: Print multiples of 7 up to 500", "canonical_solution": "awk 'BEGIN {for (i = 1; i <= 500; i++) if (i % 7 == 0) print i}'", "level": "middle", "instruction": "Using the awk command in Linux, complete the following task: Print multiples of 7 up to 500"}
{"task_id": "AWK/23", "prompt": "Using the awk command in Linux, complete the following task: Print the content of the first 5 lines of/etc/passwd", "canonical_solution": "awk 'NR<=5' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the content of the first 5 lines of/etc/passwd"}
{"task_id": "AWK/24", "prompt": "Using the awk command in Linux, complete the following task: Print the content of line 5 of/etc/passwd", "canonical_solution": "awk 'NR==5' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the content of line 5 of/etc/passwd"}
{"task_id": "AWK/25", "prompt": "Using the awk command in Linux, complete the following task: Print line numbers for empty lines in/etc/passwd", "canonical_solution": " awk '{if($0 == \"\") {print NR}}' /etc/passwd ", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print line numbers for empty lines in/etc/passwd"}
{"task_id": "AWK/26", "prompt": "Using the awk command in Linux, complete the following task: Print line numbers for lines with byte count greater than 50 in/etc/passwd", "canonical_solution": " awk 'length($0) > 50 {print NR}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print line numbers for lines with byte count greater than 50 in/etc/passwd"}
{"task_id": "AWK/27", "prompt": "Using the awk command in Linux, complete the following task: Print non empty lines in/etc/passwd", "canonical_solution": "awk '/^[^$]/' /etc/passwd ", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print non empty lines in/etc/passwd"}
{"task_id": "AWK/28", "prompt": "Using the awk command in Linux, complete the following task: Using regular expression matching to print non empty rows in/etc/passwd", "canonical_solution": "awk '/^[^$]/' /etc/passwd ", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Using regular expression matching to print non empty rows in/etc/passwd"}
{"task_id": "AWK/29", "prompt": "Using the awk command in Linux, complete the following task: Print lines in/etc/passwd that do not contain root", "canonical_solution": "awk '!/root/' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print lines in/etc/passwd that do not contain root"}
{"task_id": "AWK/30", "prompt": "Using the awk command in Linux, complete the following task: Using the awk command in Linux, complete the following task: Print lines in/etc/passwd that contain root", "canonical_solution": "awk '/root/' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Using the awk command in Linux, complete the following task: Print lines in/etc/passwd that contain root"}
{"task_id": "AWK/31", "prompt": "Using the awk command in Linux, complete the following task: Print lines in/etc/passwd that do not contain ()", "canonical_solution": "awk '!/\\(\\)/' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print lines in/etc/passwd that do not contain ()"}
{"task_id": "AWK/32", "prompt": "Using the awk command in Linux, complete the following task: Print lines in/etc/passwd that do not contain (", "canonical_solution": "awk '!/\\(/' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print lines in/etc/passwd that do not contain ("}
{"task_id": "AWK/33", "prompt": "Using the awk command in Linux, complete the following task: Print lines without numbers in/etc/passwd", "canonical_solution": "awk '!/[0-9]/' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print lines without numbers in/etc/passwd"}
{"task_id": "AWK/34", "prompt": "Using the awk command in Linux, complete the following task: Print lines in/etc/passwd that do not contain numbers greater than 5000", "canonical_solution": "awk -F':' '{printit=1; for(i=1;i<=NF;i++) if($i~/^[0-9]+$/ && $i+0>5000) printit=0;} printit {print}' /etc/passwd", "level": "hard", "instruction": "Using the awk command in Linux, complete the following task: Print lines in/etc/passwd that do not contain numbers greater than 5000"}
{"task_id": "AWK/35", "prompt": "Using the awk command in Linux, complete the following task: Print lines in/etc/passwd containing numbers greater than 5000", "canonical_solution": "awk -F':' '{for(i=1; i<=NF; i++) if($i ~ /^[0-9]+$/ && $i+0 > 5000) {print; break}}' /etc/passwd", "level": "middle", "instruction": "Using the awk command in Linux, complete the following task: Print lines in/etc/passwd containing numbers greater than 5000"}
{"task_id": "AWK/36", "prompt": "Using the awk command in Linux, complete the following task: Print words that only appear once in/etc/passwd", "canonical_solution": "awk -F':' '{\n    for (i = 1; i <= NF; i++) word_count[$i]++\n}\nEND {\n    for (word in word_count)\n        if (word_count[word] == 1)\n            print word\n}' /etc/passwd", "level": "hard", "instruction": "Using the awk command in Linux, complete the following task: Print words that only appear once in/etc/passwd"}
{"task_id": "AWK/37", "prompt": "Using the awk command in Linux, complete the following task: Print/etc/passwd as the first word on each line", "canonical_solution": "awk -F':' '{print $1}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print/etc/passwd as the first word on each line"}
{"task_id": "AWK/38", "prompt": "Using the awk command in Linux, complete the following task: Print the last word of each line in/etc/passwd", "canonical_solution": "awk -F':' '{print $NF}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the last word of each line in/etc/passwd"}
{"task_id": "AWK/39", "prompt": "Using the awk command in Linux, complete the following task: Print the last two words of each line in/etc/passwd", "canonical_solution": "awk -F':' '{print $(NF-1) \":\" $NF}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the last two words of each line in/etc/passwd"}
{"task_id": "AWK/40", "prompt": "Using the awk command in Linux, complete the following task: Print the first two words of each line in/etc/passwd", "canonical_solution": " awk -F':' '{print $1 \":\" $2}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the first two words of each line in/etc/passwd"}
{"task_id": "AWK/41", "prompt": "Using the awk command in Linux, complete the following task: Print the number of words per line in/etc/passwd", "canonical_solution": "awk -F':' '{print NF}' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the number of words per line in/etc/passwd"}
{"task_id": "AWK/42", "prompt": "Using the awk command in Linux, complete the following task: Print the number of digits per line in/etc/passwd", "canonical_solution": "awk '{num_digits = gsub(/[0-9]/,\"&\"); print num_digits}' /etc/passwd", "level": "middle", "instruction": "Using the awk command in Linux, complete the following task: Print the number of digits per line in/etc/passwd"}
{"task_id": "AWK/43", "prompt": "Using the awk command in Linux, complete the following task: Print the line number with the highest number of digits in/etc/passwd", "canonical_solution": "awk '{\n    num_digits = gsub(/[0-9]/,\"\"); \n    if (num_digits > max_digits) {\n        max_digits = num_digits;\n        line_number = NR;\n    }\n}\nEND {\n    print line_number\n}' /etc/passwd", "level": "hard", "instruction": "Using the awk command in Linux, complete the following task: Print the line number with the highest number of digits in/etc/passwd"}
{"task_id": "AWK/44", "prompt": "Using the awk command in Linux, complete the following task: Using the awk command in Linux, complete the following task: Print the line number with the lowest number of digits in/etc/passwd", "canonical_solution": "awk 'BEGIN {min_digits = 999999; line_number = 0}\n{\n    num_digits = gsub(/[0-9]/,\"\"); \n    if (NR == 1 || num_digits < min_digits) {\n        min_digits = num_digits;\n        line_number = NR;\n    }\n}\nEND {\n    if(line_number > 0) {\n        print line_number;\n    } else {\n        print \"No digits found\";\n    }\n}' /etc/passwd", "level": "hard", "instruction": "Using the awk command in Linux, complete the following task: Using the awk command in Linux, complete the following task: Print the line number with the lowest number of digits in/etc/passwd"}
{"task_id": "AWK/45", "prompt": "Using the awk command in Linux, complete the following task: Print words containing r in/etc/passwd", "canonical_solution": "awk -F':' '{\n    for (i = 1; i <= NF; i++) {\n        if ($i ~ /r/)\n            print $i\n    }\n}' /etc/passwd", "level": "hard", "instruction": "Using the awk command in Linux, complete the following task: Print words containing r in/etc/passwd"}
{"task_id": "AWK/46", "prompt": "Using the awk command in Linux, complete the following task: Print words without r in/etc/passwd", "canonical_solution": "awk -F':' '{\n    for (i = 1; i <= NF; i++) {\n        if ($i !~ /r/)\n            print $i\n    }\n}' /etc/passwd", "level": "hard", "instruction": "Using the awk command in Linux, complete the following task: Print words without r in/etc/passwd"}
{"task_id": "AWK/47", "prompt": "Using the awk command in Linux, complete the following task: Print the current user's username", "canonical_solution": "whoami | awk '{print $1}'", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the current user's username"}
{"task_id": "AWK/48", "prompt": "Using the awk command in Linux, complete the following task: Print the line containing, in/etc/passwd", "canonical_solution": " awk '/,/' /etc/passwd", "level": "easy", "instruction": "Using the awk command in Linux, complete the following task: Print the line containing, in/etc/passwd"}
{"task_id": "AWK/49", "prompt": "Using the awk command in Linux, complete the following task: Print the line with the highest number of bytes in/etc/passwd", "canonical_solution": "awk '{\n    line_length = length($0);\n    if (line_length > max_length) {\n        max_length = line_length;\n        max_line = $0;\n    }\n}\nEND {\n    print max_line;\n}' /etc/passwd", "level": "hard", "instruction": "Using the awk command in Linux, complete the following task: Print the line with the highest number of bytes in/etc/passwd"}
{"task_id": "AWK/50", "prompt": "Using the awk command in Linux, complete the following task: Print the line with the fewest number of bytes in/etc/passwd", "canonical_solution": "awk '\nBEGIN { min_length = 999999 } # Start with a very high min length to ensure the first line is less than this value\n{\n    line_length = length($0);\n    if (line_length < min_length) {\n        min_length = line_length;\n        min_line = $0;\n    }\n}\nEND {\n    if (NR > 0) print min_line; # Ensure the file was not empty\n}' /etc/passwd", "level": "hard", "instruction": "Using the awk command in Linux, complete the following task: Print the line with the fewest number of bytes in/etc/passwd"}
