open System
open System.Collections.Generic
open System.Diagnostics

module QuickSortProgram =

    let rec quicksort list =
        match list with
        | [] -> []
        | pivot::rest ->
            let less = List.filter ((>) pivot) rest
            let greater = List.filter ((<=) pivot) rest
            List.concat [quicksort less; [pivot]; quicksort greater]

    let checkQuicksort() =
        Debug.Assert(quicksort [3; 1; 4; 1; 5; 9; 2; 6; 5; 3; 5] = [1; 1; 2; 3; 3; 4; 5; 5; 5; 6; 9])
        Debug.Assert(quicksort [5; 4; 3; 2; 1] = [1; 2; 3; 4; 5])
        Debug.Assert(quicksort [] = [])
        Debug.Assert(quicksort [1] = [1])

    [<EntryPoint>]
    let main argv =
        checkQuicksort()
        0
