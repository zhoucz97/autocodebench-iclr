function quicksort(list: number[] | null): number[] {
    if (list === null || list.length <= 1) {
        return list ?? [];
    }

    const pivot = list[0];
    const rest = list.slice(1);
    const less = rest.filter(x => x < pivot);
    const greater = rest.filter(x => x >= pivot);

    return [...quicksort(less), pivot, ...quicksort(greater)];
}

function arraysEqual(a: number[], b: number[]): boolean {
    return a.length === b.length && a.every((val, index) => val === b[index]);
}

function checkQuicksort(): void {
    console.assert(arraysEqual(quicksort([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]), [1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 9]));
    console.assert(arraysEqual(quicksort([5, 4, 3, 2, 1]), [1, 2, 3, 4, 5]));
    console.assert(arraysEqual(quicksort([]), []));
    console.assert(arraysEqual(quicksort([1]), [1]));
}

checkQuicksort();
