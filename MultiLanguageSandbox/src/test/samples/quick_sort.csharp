using System;
using System.Collections.Generic;
using System.Linq;
using System.Diagnostics;

namespace QuickSortProgram
{
    class Program
    {
        static List<int> Quicksort(List<int> list)
        {
            if (list == null || list.Count <= 1)
                return list ?? new List<int>();
            
            int pivot = list[0];
            List<int> rest = list.Skip(1).ToList();
            List<int> less = rest.Where(x => x < pivot).ToList();
            List<int> greater = rest.Where(x => x >= pivot).ToList();
            
            return Quicksort(less).Concat(new List<int> { pivot }).Concat(Quicksort(greater)).ToList();
        }

        static void CheckQuicksort()
        {
            Debug.Assert(Quicksort(new List<int> { 3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5 }).SequenceEqual(new List<int> { 1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 9 }));
            Debug.Assert(Quicksort(new List<int> { 5, 4, 3, 2, 1 }).SequenceEqual(new List<int> { 1, 2, 3, 4, 5 }));
            Debug.Assert(Quicksort(new List<int>()).SequenceEqual(new List<int>()));
            Debug.Assert(Quicksort(new List<int> { 1 }).SequenceEqual(new List<int> { 1 }));
        }

        static void Main(string[] args)
        {
            CheckQuicksort();
        }
    }
}
