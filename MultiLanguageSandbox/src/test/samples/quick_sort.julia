function quicksort(list)
    if isnothing(list) || length(list) <= 1
        return isnothing(list) ? Int[] : list
    end
    
    pivot = list[1]
    rest = list[2:end]
    less = filter(x -> x < pivot, rest)
    greater = filter(x -> x >= pivot, rest)
    
    return vcat(quicksort(less), [pivot], quicksort(greater))
end

function check_quicksort()
    @assert quicksort([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]) == [1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 9]
    @assert quicksort([5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5]
    @assert quicksort(Int[]) == Int[]
    @assert quicksort([1]) == [1]
end

function main()
    check_quicksort()
end

main()
