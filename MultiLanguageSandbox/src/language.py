#!/usr/bin/env python3

# 语言集群映射，用于将输入语言转换为实际执行的语言
def get_language(lang):
    lang_cluster = {
        "c++": "cpp",
        "python3": "python",
        "py": "python",
        "js": "javascript",
        "ts": "typescript",
        "golang": "go",
        "rs": "rust",
        "kt": "kotlin",
        "hs": "haskell",
        "lisp": "common lisp",
        "bash": "shell",
        "sh": "shell",
        "ps1": "powershell",
        "md": "markdown",
        "fs": "f#",
        "fsharp": "f#",
        "f_sharp": "f#",
        "visual basic": "vb",
        "erl": "erlang",
        "ex": "elixir",
        "pas": "pascal",
        "coffee": "coffeescript",
        "emacs-lisp": "emacs lisp",
        "el": "emacs lisp",
        "vim": "vimscript",
        "scm": "scheme",
        "cs": "c#",
        "csharp": "c#",
        "c_sharp": "c#"
    }
    return lang_cluster.get(lang.lower(), lang.lower())

def get_file_extension(lang):
    """根据语言获取文件扩展名"""
    extensions = {
        "python": ".py",
        "cpp": ".cpp",
        "c": ".c",
        "java": ".java",
        "javascript": ".js",
        "typescript": ".ts",
        "go": ".go",
        "rust": ".rs",
        "ruby": ".rb",
        "php": ".php",
        "c#": ".cs",
        #"scala": ".scala",
        "scala": ".sc",
        "kotlin": ".kts",
        "swift": ".swift",
        "perl": ".pl",
        "r": ".R",
        "haskell": ".hs",
        "common lisp": ".lisp",
        "lua": ".lua",
        "shell": ".sh",
        "powershell": ".ps1",
        "sql": ".sql",
        "html": ".html",
        "json": ".json",
        "markdown": ".md",
        "dart": ".dart",
        "f#": ".fs",
        "vb": ".vb",
        "groovy": ".groovy",
        "erlang": ".erl",
        "elixir": ".exs",
        "julia": ".jl",
        "fortran": ".f95",
        "pascal": ".pas",
        "awk": ".awk",
        "tcl": ".tcl",
        "racket": ".rkt",
        "scheme": ".scm",
        "emacs lisp": ".el",
        "vimscript": ".vim",
        "coffeescript": ".coffee",
    }
    return extensions.get(lang.lower(), ".txt")