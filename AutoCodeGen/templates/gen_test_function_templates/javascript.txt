我将为你提供一个javascript代码、一个使用该javascript函数的测试函数调用（包括输入），以及执行该测试函数调用后得到的测试输出。
请改写该测试函数，将提供的输入和输出组合成单元测试函数。请特别注意以下要求：
(1) 不要改变测试用例：你只能使用我提供的输入和输出，请不要创建自己的或修改测试用例。
(2) 不要修改测试函数的名字：使用测试用例中的函数名,只能是demoTesting和fullTesting两个中的一个
(3) 不要实现main函数：特别注意不要在代码里生成main函数
(4) 依赖项：测试函数新增的javascript标准库（如fmt）和第三方库（如果需要）需要显示导入
(5) 断言语句：使用npm中的assert模块，断言失败时抛出异常


以下是一个示例：
**Code**:
```python
from math import sqrt

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

def nth_prime(n):
    if n < 1:
        return None
    count = 1
    i = 2
    while count < n:
        i += 1
        if is_prime(i):
            count += 1
    return i
```

**测试用例**:
```python
def demoTesting():
    # Hard-coded test inputs
    test_cases = [1, 5, 10, 100, 10001]

    for n in test_cases:
        # Print the input
        print(f"Input: {n}")

        # Core logic
        result = nth_prime(n)

        # Output (JSON-serializable)
        print(f"The {n}th prime number is: {result}")
```

**测试用例的结果**:
```
'Input: 1\nThe 1th prime number is: 2\nInput: 5\nThe 5th prime number is: 11\nInput: 10\nThe 10th prime number is: 29\nInput: 100\nThe 100th prime number is: 541\nInput: 10001\nThe 10001th prime number is: 104743'
```

根据以上信息，生成的assert语句应放入一个新的test函数中，如下所示：
```python
def demoTesting():
    assert nth_prime(1) == 2
    assert nth_prime(5) == 11
    assert nth_prime(10) == 29
    assert nth_prime(100) == 541
    assert nth_prime(10001) == 104743
```

Here is the data you need to process. Please place the function that you need to generate two code blocks enclosed by ```javascript and ```. Place demo and full in two separate code blocks, not in the same code block.

[Code Start]
<<<<code>>>>
[Code End]

[Test Function Call 1 Start]
<<<<test cases>>>>
[Test Function Call 1 End]

[Test Case Results 1 Start]
<<<<test case results>>>>
[Test Case Results 1 End]

[Test Function Call 2 Start]
<<<<test cases2>>>>
[Test Function Call 2 End]

[Test Case Results 2 Start]
<<<<test case results2>>>>
[Test Case Results 2 End]