{"index": 0, "seed": "#include <iostream>\nusing namespace std;\n\nint add_two_numbers(int a, int b) {\n    return a + b;\n}", "canonical_solution": "```cpp\n#include <iostream>\n#include <map>\n#include <cmath>\n#include <vector>\n#include <stdexcept>\nusing namespace std;\n\nmap<string, double> compute_operations(int a, int b) {\n    map<string, double> results;\n    results[\"addition\"] = a + b;\n    results[\"subtraction\"] = a - b;\n    results[\"multiplication\"] = a * b;\n    \n    if (b != 0) {\n        results[\"division\"] = static_cast<double>(a) / b;\n        results[\"modulo\"] = a % b;\n    } else {\n        results[\"division\"] = NAN;\n        results[\"modulo\"] = NAN;\n    }\n    \n    return results;\n}\n```", "demo_test_func": "#include <iostream>\n#include <vector>\n#include <map>\n#include <cmath>\nusing namespace std;\n\nvoid demo_testing() {\n    vector<pair<int, int>> test_cases = {\n        {10, 5},\n        {5, 0}\n    };\n\n    for (const auto& test : test_cases) {\n        int a = test.first;\n        int b = test.second;\n        cout << \"Input: a = \" << a << \", b = \" << b << endl;\n        map<string, double> result = compute_operations(a, b);\n        \n        cout << \"{\";\n        bool first = true;\n        for (const auto& pair : result) {\n            if (!first) cout << \", \";\n            cout << \"\\\"\" << pair.first << \"\\\": \";\n            if (isnan(pair.second)) cout << \"NaN\";\n            else cout << pair.second;\n            first = false;\n        }\n        cout << \"}\" << endl;\n    }\n}\n\nint main() {\n    demo_testing();\n    return 0;\n}", "full_test_func": "#include <iostream>\n#include <vector>\n#include <map>\n#include <cmath>\nusing namespace std;\n\nvoid full_testing() {\n    vector<pair<int, int>> test_cases = {\n        {10, 5},        // Basic case\n        {5, 0},         // Division by zero\n        {0, 0},         // Double zero\n        {0, 10},        // Zero dividend\n        {-10, 5},       // Negative dividend\n        {-10, -5},      // Both negative\n        {1000000, 500000}, // Large numbers\n        {5, 2},         // Non-zero modulo\n        {1, 2}          // Fractional division\n    };\n\n    for (const auto& test : test_cases) {\n        int a = test.first;\n        int b = test.second;\n        cout << \"Input: a = \" << a << \", b = \" << b << endl;\n        map<string, double> result = compute_operations(a, b);\n        \n        cout << \"{\";\n        bool first = true;\n        for (const auto& pair : result) {\n            if (!first) cout << \", \";\n            cout << \"\\\"\" << pair.first << \"\\\": \";\n            if (isnan(pair.second)) cout << \"NaN\";\n            else cout << pair.second;\n            first = false;\n        }\n        cout << \"}\" << endl << endl;\n    }\n}\n\nint main() {\n    full_testing();\n    return 0;\n}", "language": "cpp"}
